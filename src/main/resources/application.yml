# default profile
spring:
  application:
    name: tree-server
  profiles:
    group:
      dev: common, dev
---
spring:
  profiles:
    active: dev
  servlet:
    multipart:
      maxFileSize: 10MB
      maxRequestSize: 20MB
      enabled: true
---
spring:
  config:
    activate:
      on-profile: "common"
springdoc:
  swagger-ui:
    tags-sorter: alpha            # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: alpha      # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
  cache:
    disabled: true
  use-fqn: true
---
logging:
  level:
    org.springframework.security.web.FilterChainProxy: DEBUG
spring:
  application:
    name: tree-server-dev
  config:
    activate:
      on-profile: "dev"
  datasource:
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: jdbc:mysql://${aws.db.url}/${aws.db.name}?autoReconnect=true&setTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
  data:
    redis:
      host: ${REDIS_URL}
      port: 6379
jwt:
  header: Authorization
  # dev server
  secret:
    key: ${JWT_SECRET}
  #  secret : ${JWT_SECRET}
  authorities-key: authoritiesKey
  access-token-validity-in-seconds: 30000 # 30 s
  refresh-token-validity-in-seconds: 60000 # 1 min



cloud:
  aws:
    s3:
      bucket: elasticbeanstalk-ap-northeast-2-851725177732
      #s3 bucket
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
      #aws access key, secret key

naver-sms:
  accessKey: ${NAVER_SMS_ACCESSKEY}
  secretKey: ${NAVER_SMS_SECRET}
  serviceId: ${NAVER_SMS_SERVICEID}
  senderPhone: ${NAVER_SMS_PHONE}
---
spring:
  application:
    name: tree-server-local
  config:
    activate:
      on-profile: "local"
  datasource:
    username: ${aws.db.username}
    password: ${aws.db.password}
    url: jdbc:mysql://${aws.db.url}/${aws.db.name}?autoReconnect=true&setTimezone=Asia/Seoul
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  data:
    redis:
      host: localhost
      port : 6379
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
jwt:
  header: Authorization
  # dev server
  secret:
    key: ${JWT_SECRET}
  #  secret : ${JWT_SECRET}
  authorities-key: authoritiesKey
  access-token-validity-in-seconds: 20000 # 30 m
  refresh-token-validity-in-seconds: 30000 # 14 d

cloud:
  aws:
    s3:
      bucket: elasticbeanstalk-ap-northeast-2-851725177732
      #s3 bucket
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}

naver-sms:
  accessKey: ${NAVER_SMS_ACCESSKEY}
  secretKey: ${NAVER_SMS_SECRET}
  serviceId: ${NAVER_SMS_SERVICEID}
  senderPhone: ${NAVER_SMS_PHONE}
#spring:
#  config:
#    activate:
#      on-profile: release
#  datasource:
#    username: ${aws.db.username}
#    password: ${aws.db.password}
#    url: ${aws.db.url}
#    driver-class-name: com.mysql.cj.jdbc.Driver
#  sql:
#    init:
#      mode: never
#  jpa:
#    properties:
#      hibernate:
#        dialect: org.hibernate.dialect.MySQLDialect
#        #        show_sql: true
#        #        format_sql: true
#        use_sql_comments: true
#        hbm2ddl:
#          auto: update
#        default_batch_fetch_size: 1000
#  data:
#    redis:
#      host: ${release.redis.host}
#      port: 6379
#jwt:
#  header: Authorization
#  # dev server
#  secret: ${JWT_SECRET}
#  #  secret : ${JWT_SECRET}
#  authorities-key: authoritiesKey
#  access-token-validity-in-seconds: 1210000000 # 30 m
#  refresh-token-validity-in-seconds: 1210000000 # 14 d
#
#openai:
#  token: ${OPEN_API_TOKEN}
#  url:
#    chat: https://api.openai.com/v1/chat/completions
